{"version":3,"sources":["index.js"],"names":["HackerNewsPosts","posts","comments","length","map","post","href","url","title","id","App","React","useState","setPosts","setComments","useEffect","a","fetch","response","ok","Error","text","json","promises","slice","then","Promise","all","result","kidsdata","kids","map1","test","resultNew","console","log","error","getTopStories","className","rootElement","document","getElementById","ReactDOM","render"],"mappings":"mNAIA,SAASA,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,MAAmB,EAAZC,SAChC,OAAqB,IAAjBD,EAAME,OACD,6CAIP,cAAC,WAAD,UACA,gCACE,iDACA,6BACGF,EAAMG,KAAI,SAAAC,GAAI,OACb,6BACE,mBAAGC,KAAMD,EAAKE,IAAd,SAAoBF,EAAKG,SADlBH,EAAKI,cAWxB,SAASC,IACP,MAA0BC,IAAMC,SAAS,IAAzC,mBAAOX,EAAP,KAAcY,EAAd,KACA,EAAgCF,IAAMC,SAAS,IAA/C,mBAAOV,EAAP,KAAiBY,EAAjB,KAwCA,OAtCAH,IAAMI,WAAU,WAAM,4CACpB,wCAAAC,EAAA,4DACc,wDADd,kBAG2BC,MAFb,yDADd,WAIwB,KADdC,EAHV,QAIiBC,GAJjB,sBAKY,IAAIC,MAAM,kBAAoBF,EAASG,MALnD,uBAOuBH,EAASI,OAPhC,cAOUA,EAPV,OAQUC,EAAWD,EACdE,MAAM,EAAG,IACTpB,KAAI,SAAAK,GAAE,OACLQ,MAAM,8CAAD,OAA+CR,EAA/C,UAA0DgB,MAC7D,SAAAP,GAAQ,OAAIA,EAASI,aAZ/B,UAeyBI,QAAQC,IAAIJ,GAfrC,eAeUK,EAfV,OAgBQC,EAAWD,EAAO,GAAGE,KACnBC,EAAOF,EAASzB,KAAI,SAAA4B,GAAI,OAC5Bf,MAAM,8CAAD,OAA+Ce,EAA/C,UAA4DP,MAC/D,SAAAP,GAAQ,OAAIA,EAASI,aAnB7B,UAsB4BI,QAAQC,IAAII,GAtBxC,QAsBUE,EAtBV,OAuBIC,QAAQC,IAAI,UAAWF,GACvBpB,EAASe,GACTd,EAAYmB,GAzBhB,kDA2BIC,QAAQE,MAAR,MA3BJ,2DADoB,uBAAC,WAAD,wBA+BpBC,KACC,IAOD,cAAC,WAAD,UACA,qBAAKC,UAAU,SAAf,SACE,cAACtC,EAAD,CAAiBC,MAAOA,EAAOC,SAAUA,QAM/C,IAAMqC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAACjC,EAAD,IAAS6B,K","file":"static/js/main.c4a6c6da.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\n\nfunction HackerNewsPosts({ posts, comments }) {\n  if (posts.length === 0) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <Fragment>\n    <div>\n      <h1 > Top 10 Stories</h1>\n      <ul>\n        {posts.map(post => (\n          <li key={post.id}>\n            <a href={post.url}>{post.title}</a>\n          </li>\n        ))}\n        \n      </ul>\n    </div>\n    </Fragment>\n  );\n}\n\nfunction App() {\n  const [posts, setPosts] = React.useState([]);\n  const [comments, setComments] = React.useState([]);\n\n  React.useEffect(() => {\n    async function getTopStories() {\n      const url = 'https://hacker-news.firebaseio.com/v0/topstories.json';\n      try {\n        const response = await fetch(url);\n        if (response.ok === false) {\n          throw new Error('Response Error:' + response.text);\n        }\n        const json = await response.json();\n        const promises = json\n          .slice(0, 15)\n          .map(id =>\n            fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json`).then(\n              response => response.json()\n            )\n          );\n        const result = await Promise.all(promises);\n        var kidsdata = result[0].kids;\n        const map1 = kidsdata.map(test =>\n          fetch(`https://hacker-news.firebaseio.com/v0/item/${test}.json`).then(\n            response => response.json()\n          )\n        );\n        const resultNew = await Promise.all(map1);\n        console.log('Testing', resultNew);\n        setPosts(result);\n        setComments(resultNew);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    getTopStories();\n  }, []);\n\n  function sayHello(id) {\n    alert('sayhello');\n  }\n\n  return (\n    <Fragment>\n    <div className=\"hacker\">\n      <HackerNewsPosts posts={posts} comments={comments} />\n    </div>\n    </Fragment>\n  );\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}